# This is the main configuration file for the application.
# https://www.playframework.com/documentation/latest/ConfigFile

play.http.secret.key=${?PLAY_SECRET_KEY}
play.i18n.langs = [ "en" ]

# Play server settings
play.server.http.port = ${?PLAY_HTTP_PORT}

# Enable CORS
play.filters.enabled += "play.filters.cors.CORSFilter"
play.filters.cors {
  allowedOrigins = ["*"]
  allowedHttpMethods = ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
  allowedHttpHeaders = ["Accept", "Content-Type"]
}

# Database configuration
slick.dbs.default {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    driver = org.postgresql.Driver
    url = ${?DB_URL}
    username = ${?DB_USERNAME}
    password = ${?DB_PASSWORD}
  }
}

# Enable evolutions
play.evolutions.enabled = ${?PLAY_EVOLUTIONS_ENABLED}
play.evolutions.autoApply = ${?PLAY_EVOLUTIONS_AUTO_APPLY}

# Disable Play's default DBModule to avoid conflicts with Slick
play.modules.disabled += "play.api.db.DBModule"


# Assets configuration
play.assets {
  path = "/public"
  urlPrefix = "/assets"
}

# Additional configuration for Play with Scala 3
play.http.router = "router.Routes"
# Remove the application loader - Play will use the default

# JWT Configuration
jwt {
  # Secret key for JWT signature - in production, this should be kept secure
  secret = ${?JWT_SECRET}
  # Access token expiration time in seconds (15 minutes)
  access.expiration = ${?JWT_ACCESS_EXPIRATION}
  # Refresh token expiration time in seconds (30 days)
  refresh.expiration = ${?JWT_REFRESH_EXPIRATION}
  # Token issuer
  issuer = ${?JWT_ISSUER}
}

# Redis Configuration
redis {
  # Redis host
  host = ${?REDIS_HOST}
  # Redis port
  port = ${?REDIS_PORT}
  # Redis database index
  database = ${?REDIS_DATABASE}
  # Redis timeout in milliseconds
  timeout = ${?REDIS_TIMEOUT}
  # Redis password (if required)
  password = ${?REDIS_PASSWORD}
  # Redis key prefix for JWT blacklist
  blacklist.prefix = "jwt:blacklist:"
  # Redis key prefix for refresh tokens
  refresh.prefix = "jwt:refresh:"
}
